apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f ../docker-compose.yml
    kompose.version: 1.33.0 (3ce457399)
  labels:
    io.kompose.service: kong
  name: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kong
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f ../docker-compose.yml
        kompose.version: 1.33.0 (3ce457399)
      labels:
        io.kompose.network/individuele-client: "true"
        io.kompose.service: kong
    spec:
      containers:
        - env:
            - name: KONG_ADMIN_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_LISTEN
              value: 0.0.0.0:8001, 0.0.0.0:8444 ssl
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_DECLARATIVE_CONFIG
              value: /usr/local/kong/declarative/kong.yml
            - name: KONG_PROXY_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PROXY_ERROR_LOG
              value: /dev/stderr
          image: kong:latest
          name: kong-gateway
          ports:
            - containerPort: 8000
              hostPort: 8000
              protocol: TCP
            - containerPort: 8443
              hostPort: 8443
              protocol: TCP
            - containerPort: 8001
              hostPort: 8001
              protocol: TCP
            - containerPort: 8444
              hostPort: 8444
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/local/kong/declarative/kong.yml
              name: kong-cm0
              subPath: kong.yml
      restartPolicy: Always
      volumes:
        - name: kong-cm0
          configMap:
            name: kong-cm0
